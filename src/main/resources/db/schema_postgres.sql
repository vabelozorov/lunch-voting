DROP TABLE IF EXISTS dishes;
DROP TABLE IF EXISTS votes;
DROP TABLE IF EXISTS menus;
DROP TABLE IF EXISTS poll_items;
DROP TABLE IF EXISTS places;
DROP TABLE IF EXISTS join_requests;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS polls;
DROP TABLE IF EXISTS areas;

CREATE TABLE IF NOT EXISTS areas (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  name VARCHAR NOT NULL,
  created TIMESTAMP NOT NULL,
  CONSTRAINT areas_name_unique UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS polls (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  start_time TIMESTAMP NOT NULL,
  end_time TIMESTAMP NOT NULL,
  change_time TIMESTAMP NOT NULL,
  menu_date TIMESTAMP NOT NULL,
  area_id VARCHAR(36),
  FOREIGN KEY (area_id) REFERENCES areas(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  name VARCHAR NOT NULL,
  email VARCHAR NOT NULL,
  password VARCHAR NOT NULL,
  roles INT NOT NULL,
  registered_date TIMESTAMP NOT NULL,
  activated BOOL NOT NULL,
  area_id VARCHAR(36),
  FOREIGN KEY (area_id) REFERENCES areas(id) ON DELETE SET NULL,
  CONSTRAINT users_email_unique UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS join_requests (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  requester_id VARCHAR(36) NOT NULL,
  created TIMESTAMP NOT NULL,
  decided_on TIMESTAMP,
  area_id VARCHAR NOT NULL,
  status INT NOT NULL,
  FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (area_id) REFERENCES areas(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS places (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  name VARCHAR NOT NULL,
  address VARCHAR,
  description VARCHAR,
  phones VARCHAR(500),
  area_id VARCHAR(36) DEFAULT NULL,
  FOREIGN KEY (area_id) REFERENCES areas(id) ON DELETE CASCADE,
  CONSTRAINT places_name_areaId_unique UNIQUE (name, area_id)
);

CREATE TABLE IF NOT EXISTS poll_items (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  poll_id VARCHAR(36) NOT NULL,
  position INT NOT NULL,
  item_id VARCHAR(36),
  FOREIGN KEY (poll_id) REFERENCES polls(id) ON DELETE CASCADE,
  FOREIGN KEY (item_id) REFERENCES places(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS menus (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  effective_date TIMESTAMP NOT NULL,
  place_id VARCHAR(36) NOT NULL,
  FOREIGN KEY (place_id) REFERENCES places(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS votes (
  id VARCHAR(36) NOT NULL PRIMARY KEY,
  version INT NOT NULL DEFAULT 0,
  voter_id VARCHAR(36),
  poll_id VARCHAR(36) NOT NULL,
  item_id VARCHAR(36),
  vote_time TIMESTAMP NOT NULL,
  FOREIGN KEY (voter_id) REFERENCES users(id) ON DELETE SET NULL,
  FOREIGN KEY (poll_id) REFERENCES polls(id) ON DELETE CASCADE,
  FOREIGN KEY (item_id) REFERENCES poll_items(id)
);

CREATE TABLE IF NOT EXISTS dishes (
  menu_id VARCHAR(36) NOT NULL,
  name VARCHAR NOT NULL,
  price FLOAT NOT NULL,
  position INT NOT NULL,
  CONSTRAINT dishes_menu_id_position_unique UNIQUE (menu_id, position),
  FOREIGN KEY (menu_id) REFERENCES menus(id) ON DELETE CASCADE
);

